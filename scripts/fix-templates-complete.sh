#!/bin/bash

# Script completo para arreglar templates de documentos
# Ejecutar en el servidor de producci√≥n

echo "üîß Iniciando fix completo de templates de documentos..."

# 1. Verificar que estamos en el directorio correcto
if [ ! -f "docker-compose.prod.yml" ]; then
    echo "‚ùå Error: No se encontr√≥ docker-compose.prod.yml"
    echo "   Aseg√∫rate de estar en el directorio del proyecto"
    exit 1
fi

# 2. Descargar √∫ltimos cambios
echo "üì• Descargando √∫ltimos cambios de GitHub..."
git pull origin master

# 3. Verificar que los scripts existen
if [ ! -f "scripts/fix-document-templates-dates.sql" ]; then
    echo "‚ùå Error: No se encontr√≥ scripts/fix-document-templates-dates.sql"
    exit 1
fi

# 4. Ejecutar fix de fechas inv√°lidas
echo "üîß Arreglando fechas inv√°lidas en document_templates..."
mysql -u miconcesionaria -p'!FVsxr?pmm34xm2N' miconcesionaria < scripts/fix-document-templates-dates.sql

# 5. Verificar que se arregl√≥
echo "‚úÖ Verificando que se arreglaron las fechas..."
mysql -u miconcesionaria -p'!FVsxr?pmm34xm2N' miconcesionaria -e "
SELECT 
    id,
    name,
    type,
    isActive,
    isDefault,
    LENGTH(content) as content_length,
    createdAt,
    updatedAt
FROM document_templates
ORDER BY createdAt DESC;
"

# 6. Reiniciar la aplicaci√≥n
echo "üîÑ Reiniciando la aplicaci√≥n..."
docker-compose -f docker-compose.prod.yml restart app

# 7. Esperar que se inicie
echo "‚è≥ Esperando que la aplicaci√≥n se inicie..."
sleep 10

# 8. Verificar logs
echo "üìä Verificando logs de la aplicaci√≥n..."
docker-compose -f docker-compose.prod.yml logs --tail=20 app

echo "‚úÖ Fix completado!"
echo "üåê La aplicaci√≥n deber√≠a estar funcionando en: https://miconcesionaria.nodonorte.com"
echo "üìù Para verificar templates: /admin/settings/document-templates"
