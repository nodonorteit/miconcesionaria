name: Build and Push Docker Images to Huawei Cloud

on:
  push:
    branches: [ master, main, staging ]
    tags: [ 'v*' ]
    paths-ignore:
      - 'docker-compose.prod.yml'
  pull_request:
    branches: [ master, main, staging ]

env:
  REGISTRY: swr.sa-argentina-1.myhuaweicloud.com
  ORGANIZATION: nodonorteit
  IMAGE_NAME: miconcesionaria

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Huawei Cloud SWR
      run: |
        echo "${{ secrets.HUAWEI_SECRET_ACCESS_KEY }}" | docker login -u "${{ secrets.HUAWEI_ACCESS_KEY_ID }}" --password-stdin swr.sa-argentina-1.myhuaweicloud.com

    - name: Set image tag and environment
      id: set-tag
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/master" || "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "tag=latest" >> $GITHUB_OUTPUT
          echo "environment=production" >> $GITHUB_OUTPUT
          echo "image_name=miconcesionaria:latest" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
          echo "tag=staging" >> $GITHUB_OUTPUT
          echo "environment=staging" >> $GITHUB_OUTPUT
          echo "image_name=miconcesionaria:staging" >> $GITHUB_OUTPUT
        else
          echo "tag=dev" >> $GITHUB_OUTPUT
          echo "environment=development" >> $GITHUB_OUTPUT
          echo "image_name=miconcesionaria:dev" >> $GITHUB_OUTPUT
        fi

    - name: Build Docker image
      run: |
        echo "🏗️ Construyendo imagen: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ steps.set-tag.outputs.image_name }}"
        docker build -t ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ steps.set-tag.outputs.image_name }} .

    - name: Push Docker image
      run: |
        echo "🚀 Subiendo imagen: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ steps.set-tag.outputs.image_name }}"
        docker push ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ steps.set-tag.outputs.image_name }}

    # MariaDB image removed - using native MariaDB on server

    - name: Update docker-compose files
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'
      run: |
        # Crear archivo docker-compose.prod.yml para producción
        if [[ "${{ github.ref }}" == "refs/heads/master" || "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "📝 Creando docker-compose.prod.yml para PRODUCCIÓN"
          cat > docker-compose.prod.yml << 'EOF'
        version: '3.8'
        
        services:
          app:
            image: swr.sa-argentina-1.myhuaweicloud.com/nodonorteit/miconcesionaria:latest
            platform: linux/amd64
            ports:
              - "3000:3000"
            environment:
              - DATABASE_URL=mysql://miconcesionaria:%21FVsxr%3Fpmm34xm2N@127.0.0.1:3306/miconcesionaria
              - NEXTAUTH_URL=https://miconcesionaria.nodonorte.com
              - NEXTAUTH_SECRET=09W4JFuZPYwZ02dQ/3WDHQggQ+fDCp55nfJCFjoTWC4=
              - SMTP_HOST=smtp1.s.ipzmarketing.com
              - SMTP_PORT=587
              - SMTP_USER=pzbkjxwenzkr
              - SMTP_PASS=7FOtsP0qKvNF
              - NODE_ENV=production
            volumes:
              - uploads_data:/app/uploads
            restart: unless-stopped
        
        volumes:
          uploads_data:
        EOF
        fi
        
        # Crear archivo docker-compose.staging.yml para staging
        if [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
          echo "📝 Creando docker-compose.staging.yml para STAGING"
          cat > docker-compose.staging.yml << 'EOF'
        version: '3.8'
        
        services:
          app:
            image: swr.sa-argentina-1.myhuaweicloud.com/nodonorteit/miconcesionaria:staging
            platform: linux/amd64
            ports:
              - "3001:3000"
            environment:
              - DATABASE_URL=mysql://miconcesionaria:%21FVsxr%3Fpmm34xm2N@127.0.0.1:3306/miconcesionaria
              - NEXTAUTH_URL=https://miconcesionaria.staging.nodonorte.com
              - NEXTAUTH_SECRET=09W4JFuZPYwZ02dQ/3WDHQggQ+fDCp55nfJCFjoTWC4=
              - SMTP_HOST=smtp1.s.ipzmarketing.com
              - SMTP_PORT=587
              - SMTP_USER=pzbkjxwenzkr
              - SMTP_PASS=7FOtsP0qKvNF
              - NODE_ENV=staging
            volumes:
              - uploads_data_staging:/app/uploads
            restart: unless-stopped
        
        volumes:
          uploads_data_staging:
        EOF
        fi

    - name: Commit updated docker-compose files
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docker-compose*.yml
        git commit -m "🔄 Update docker-compose for ${{ steps.set-tag.outputs.environment }} environment" || echo "No changes to commit"
        git push || echo "Push failed - manual update may be needed" 