name: Build and Push Docker Images to Huawei Cloud

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]

env:
  REGISTRY: swr.sa-argentina-1.myhuaweicloud.com
  ORGANIZATION: nodonorteit
  IMAGE_NAME: miconcesionaria

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Huawei Cloud SWR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.HUAWEI_ACCESS_KEY_ID }}
        password: ${{ secrets.HUAWEI_SECRET_ACCESS_KEY }}
        ecr: auto

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push MariaDB image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/mariadb/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/miconcesionaria-db:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update docker-compose with new images
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
      run: |
        # Crear archivo docker-compose.prod.yml con las imÃ¡genes de Huawei Cloud
        cat > docker-compose.prod.yml <<EOF
        version: '3.8'
        
        services:
          app:
            image: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.IMAGE_NAME }}:latest
            platform: linux/amd64
            ports:
              - "3000:3000"
            environment:
              - DATABASE_URL=mysql://\${DB_USER}:\${DB_PASSWORD}@db:3306/\${DB_NAME}
              - NEXTAUTH_URL=\${NEXTAUTH_URL}
              - NEXTAUTH_SECRET=\${NEXTAUTH_SECRET}
              - SMTP_HOST=\${SMTP_HOST}
              - SMTP_PORT=\${SMTP_PORT}
              - SMTP_USER=\${SMTP_USER}
              - SMTP_PASS=\${SMTP_PASS}
              - NODE_ENV=production
            volumes:
              - ./uploads:/app/uploads
            restart: unless-stopped
            healthcheck:
              test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
              interval: 30s
              timeout: 10s
              retries: 3
            depends_on:
              - db
        
          db:
            image: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/miconcesionaria-db:latest
            platform: linux/amd64
            environment:
              - MYSQL_ROOT_PASSWORD=\${DB_ROOT_PASSWORD}
              - MYSQL_DATABASE=\${DB_NAME}
              - MYSQL_USER=\${DB_USER}
              - MYSQL_PASSWORD=\${DB_PASSWORD}
            volumes:
              - mariadb_data:/var/lib/mysql
            ports:
              - "3306:3306"
            restart: unless-stopped
            healthcheck:
              test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
              interval: 30s
              timeout: 10s
              retries: 3
        
        volumes:
          mariadb_data:
        EOF

    - name: Commit updated docker-compose
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docker-compose.prod.yml
        git commit -m "ðŸ”„ Update docker-compose with Huawei Cloud images" || exit 0
        git push 